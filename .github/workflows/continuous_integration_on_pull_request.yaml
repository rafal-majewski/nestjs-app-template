name: Continuous integration on pull request

on:
  pull_request:

env:
  SETUP_NODE_NODE_VERSION: 19.7

jobs:
  helm_lint_check:
    name: Helm lint check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.11.2
      - name: Run Helm lint
        run: |
          npm run helm-lint:check
  hadolint_check:
    name: Hadolint check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install Hadolint
        run: |
          wget -O hadolint https://github.com/hadolint/hadolint/releases/download/v2.12.0/hadolint-Linux-x86_64
          chmod +x hadolint
          sudo mv hadolint /usr/local/bin/
      - name: Run Hadolint
        run: |
          npm run hadolint:check
  prettier_check:
    name: Prettier check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Run prettier
        run: |
          npm run prettier:check
  generate_openapi:
    name: Generate OpenAPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Generate OpenAPI
        run: |
          npm run generate-openapi
      - name: Upload OpenAPI
        uses: actions/upload-artifact@v3
        with:
          name: openapi
          path: openapi
  eslint_check:
    name: ESLint check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Run eslint
        run: |
          npm run eslint:check
  jest_check_unit:
    name: Jest check unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Run Jest
        run: |
          npm run jest:check:unit
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage_report
          path: coverage_report
  jest_check_int:
    name: Jest check integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Run Jest
        run: |
          npm run jest:check:int
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage_report
          path: coverage_report
  npm_audit_check:
    name: npm audit check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Run npm audit
        run: |
          npm run npm-audit:check
  typescript_check:
    name: TypeScript check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Run TypeScript
        run: |
          npm run typescript:check
  compile:
    name: Compile
    needs: [eslint_check, jest_check_unit, jest_check_int, typescript_check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Compile
        run: |
          npm run compile
      - name: Upload dist
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist
  helm_package:
    name: Helm package
    needs: [helm_lint_check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.SETUP_NODE_NODE_VERSION }}
          cache: "npm"
      - name: Install dependencies
        run: |
          npm ci
      - name: Remember Helm chart version
        id: remember_helm_chart_version
        run: |
          echo "helm_chart_version=$(grep '^version:' ./helm/Chart.yaml | awk '{print $2}')" >> $GITHUB_OUTPUT
      - name: Remember Helm chart name
        id: remember_helm_chart_name
        run: |
          echo "helm_chart_name=$(grep '^name:' ./helm/Chart.yaml | awk '{print $2}')" >> $GITHUB_OUTPUT
      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.11.2
      - name: Add Bitnami Helm repository
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
      - name: Run Helm package
        run: |
          npm run helm-package
      - name: Upload Helm package
        uses: actions/upload-artifact@v3
        with:
          name: helm_chart
          path: ./${{ steps.remember_helm_chart_name.outputs.helm_chart_name }}-${{ steps.remember_helm_chart_version.outputs.helm_chart_version }}.tgz
